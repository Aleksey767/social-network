{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileDataForm.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","profileInfo","descBlock","infoBlock","nameStatusBlock","topBorder","imageBlock","subTitle","infoItem","infoText","downloadImage","avatar","name","image","info","btn","editWrapper","editInfo","status","statusForUsers","fileUpload","inputStatus","inputProfile","inputItem","profileForm","contactTitle","contactsTitle","posts","formAddPost","formPosts","item","message","likeCount","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatus","useEffect","react_default","a","createElement","isOwner","onClick","className","s","type","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","Field","placeholder","component","Input","validate","required","profileCheckbox","keys","contacts","map","key","ProfileData","_ref2","goToEditMode","showDetails","setShowDetails","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo_ShowDetails","s1","ShowDetails","_ref3","ProfileInfo_Contact","contactValue","Contact","_ref4","ProfileInfo","savePhoto","saveProfile","src","photos","large","casualAvatar","target","files","length","fullName","ProfileInfo_ProfileStatusWithHooks","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","Post","likesCount","user","MyPosts","React","memo","addPost","postsElements","toConsumableArray","reverse","p","MyPosts_Post_Post","createRef","AddNewPostForm","values","newPostText","maxLength50","maxLengthCreator","inputPosts","TextArea","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","match","params","userId","Preloader","ProfileContainer","this","authorizedUserId","history","push","getUserProfile","getStatus","console","log","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/2.64160f5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__36pHk\",\"descBlock\":\"ProfileInfo_descBlock__2e4M7\",\"infoBlock\":\"ProfileInfo_infoBlock__2pC_o\",\"nameStatusBlock\":\"ProfileInfo_nameStatusBlock__1LrLO\",\"topBorder\":\"ProfileInfo_topBorder__xmEDf\",\"imageBlock\":\"ProfileInfo_imageBlock__1hqRB\",\"subTitle\":\"ProfileInfo_subTitle__2xkMm\",\"infoItem\":\"ProfileInfo_infoItem__LZ3zW\",\"infoText\":\"ProfileInfo_infoText__1GcP0\",\"downloadImage\":\"ProfileInfo_downloadImage__3Fggb\",\"avatar\":\"ProfileInfo_avatar__3bznK\",\"name\":\"ProfileInfo_name__2oBaf\",\"image\":\"ProfileInfo_image__2epQ9\",\"info\":\"ProfileInfo_info__1LSj2\",\"btn\":\"ProfileInfo_btn__2P5ss\",\"editWrapper\":\"ProfileInfo_editWrapper__Yz49D\",\"editInfo\":\"ProfileInfo_editInfo__310VE\",\"status\":\"ProfileInfo_status__1XWe5\",\"statusForUsers\":\"ProfileInfo_statusForUsers__3hwoQ\",\"fileUpload\":\"ProfileInfo_fileUpload__1COb8\",\"inputStatus\":\"ProfileInfo_inputStatus__2vH5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputProfile\":\"ProfileDataForm_inputProfile__1t0ld\",\"inputItem\":\"ProfileDataForm_inputItem__2mj1C\",\"profileForm\":\"ProfileDataForm_profileForm__2vas5\",\"contactTitle\":\"ProfileDataForm_contactTitle__1K-A5\",\"contactsTitle\":\"ProfileDataForm_contactsTitle__3glNh\",\"btn\":\"ProfileDataForm_btn__vM-IT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__wMqVn\",\"btn\":\"MyPosts_btn__1pK57\",\"formAddPost\":\"MyPosts_formAddPost__10CvM\",\"formPosts\":\"MyPosts_formPosts__3Y461\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1PqUW\",\"message\":\"Post_message__2TBJz\",\"likeCount\":\"Post_likeCount__MbbP8\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                {props.isOwner?<div  onClick={activateMode} className={s.status}>{props.status || \"------\"}</div>:\r\n                    <div className={s.statusForUsers}>{props.status || \"------\"}</div>}\r\n\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div className={s.inputStatus}>\r\n                <input  type={'text'} onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileDataForm.module.css\";\r\nimport {Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form className={s.profileForm} onSubmit={handleSubmit}>\r\n\r\n        {error && <div className=\"formSummaryError\">\r\n            {error}</div>}\r\n\r\n        <div className={s.inputItem}>Full name:<Field className={s.inputProfile} placeholder={\"Your Name\"}\r\n                                                      component={Input} name={'fullName'}\r\n                                                      validate={[required]} type={\"text\"}/></div>\r\n\r\n        <div className={s.inputItem}>About me:\r\n        <Field className={s.inputProfile} placeholder={\"Type here\"} component={Input} name={'aboutMe'}\r\n               validate={[required]} type={\"text\"}/></div>\r\n\r\n        <div className={s.inputItem}>Looking for a job?:\r\n        <Field className={s.profileCheckbox} component={Input} name={'lookingForAJob'}\r\n               type={\"checkbox\"}/></div>\r\n\r\n        <div className={s.inputItem}>My professional skills:\r\n        <Field className={s.inputProfile} type={\"text\"} placeholder={\"Type here\"} component={Input}\r\n               name={'lookingForAJobDescription'}/></div>\r\n\r\n        <div className={s.inputItem}><span className={s.contactsTitle}>Contacts:</span>\r\n        {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key}>\r\n                <div className={s.contactTitle}>{key}:</div><Field className={s.inputProfile} placeholder={key} component={Input} name={'contacts.' + key}\r\n                                    type={\"text\"}/>\r\n            </div>\r\n        })}\r\n\r\n        <button className={s.btn}>Save</button></div>\r\n    </form>\r\n\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport casualAvatar from \"../../../assets/images/user.png\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, savePhoto, isOwner, status, saveProfile, updateStatus}) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    let [editMode, setEditMode] = useState(false);\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.imageBlock}>\r\n                <img className={s.avatar} src={profile.photos.large === null\r\n                    ? casualAvatar : profile.photos.large}/>\r\n                <label>{isOwner &&\r\n                    <div className={s.fileUpload}><input className={s.downloadImage}\r\n                                                         type={\"file\"} onChange={onMainPhotoSelected}/><span>Upload a photo</span>\r\n                    </div>}\r\n                </label>\r\n            </div>\r\n            <div className={s.descBlock}>\r\n                <div className={s.nameStatusBlock}>\r\n                    <div className={s.name}>{profile.fullName}</div>\r\n                    <ProfileStatusWithHooks isOwner={isOwner} status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n                <div className={s.infoBlock}>\r\n                    {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }} profile={profile} isOwner={isOwner}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    let [showDetails, setShowDetails] = useState(false);\r\n    const setDetails = () => {\r\n        showDetails ? setShowDetails(false) : setShowDetails(true)\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.infoItem}>\r\n            <div className={s.subTitle}>About me:</div>\r\n            <div className={s.infoText}>{profile.aboutMe}</div>\r\n        </div>\r\n        <div className={s.infoItem}>\r\n            <div className={s.subTitle}>Work:</div>\r\n            <div className={s.infoText}>{(profile.lookingForAJob === true) ? 'Looking for a job' : 'Not looking for a job'}</div>\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div className={s.infoItem}>\r\n                <div className={s.subTitle}>Description:</div>\r\n                <div className={s.infoText}>{profile.lookingForAJobDescription}</div>\r\n            </div>}\r\n        <div className={s.topBorder}>\r\n            <button className={s.btn} onClick={setDetails}>Show details</button>\r\n        </div>\r\n        {showDetails && <ShowDetails profile={profile} isOwner={isOwner} goToEditMode={goToEditMode}\r\n                                     s1/>}\r\n    </div>\r\n}\r\n\r\nconst ShowDetails = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        {isOwner &&\r\n            <div className={s.editWrapper}>\r\n                <button className={s.btn + ' ' + s.editInfo} onClick={goToEditMode}>Edit</button>\r\n            </div>}\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.infoItem}>\r\n        <div className={s.subTitle}>{contactTitle}:</div>\r\n        <div className={s.infoText}>{contactValue}</div>\r\n    </div>\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport user from \"../../../../assets/images/user.png\";\r\nconst Post = ({profile,message,likesCount}) => {\r\n  return (\r\n    <div className={s.item}>\r\n     \r\n        <div className={s.message}> <img src={profile.photos.large === null\r\n            ? user : profile.photos.large} />{ message }</div>\r\n          <div>\r\n        <div className={s.likeCount}>Like:</div> { likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo(({profile, posts, addPost,isOwner}) => {\r\n    let postsElements =\r\n        [...posts]\r\n            .reverse()\r\n            .map(p => <Post profile={profile} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.formAddPost}>\r\n\r\n            <AddNewPostForm isOwner={isOwner} onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                <span>{postsElements}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddNewPostsForm = (props) => {\r\n    return (\r\n        <div>{props.isOwner&&\r\n            <form className={s.formPosts} onSubmit={props.handleSubmit}>\r\n\r\n                <h1>My posts</h1>\r\n                <Field className={s.inputPosts} validate={[required, maxLength50]} component={TextArea} name={\"newPostText\"}\r\n                       placeholder='Post message'/>\r\n                <div>\r\n                    <button className={s.btn}>Add post</button>\r\n                </div>\r\n\r\n            </form>   }\r\n        </div>\r\n    )\r\n}\r\nconst AddNewPostForm = reduxForm({form: 'ProfileAddNewPostsForm'})(AddNewPostsForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"./../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto} saveProfile={props.saveProfile}\r\n                         isOwner={props.isOwner} profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer isOwner={!props.match.params.userId}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n        console.log('xui')\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto,saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}