{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","dialog","active","messages","message","dialogsInput","btn","DialogItem","props","path","id","react_default","a","createElement","className","s","NavLink","to","name","Message","maxLengthCreator50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Input","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","newMessageBody","isAuth","values","sendMessage","Redirect","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,yBAAAC,aAAA,8BAAAC,IAAA,uHCWHC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEd,QACrBU,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAIR,GAAOD,EAAMU,QCDnBC,EAJC,SAACX,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,SAAUI,EAAMJ,qDCEvCgB,EAAqBC,YAAiB,IAa/BC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,CAZL,SAACf,GAC3B,OACIG,EAAAC,EAAAC,cAAA,QAAMY,SAAUjB,EAAMkB,cAClBf,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,cACdM,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,UAAWC,IAAOX,KAAM,iBACxBY,SAAU,CAACC,IAASX,GAAqBY,YAAY,uBAC5DrB,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAET,KAArB,YCwBD2B,EA9BC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMnC,QAAQsC,IAAK,SAAAC,GAAC,OAAI3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAYrB,KAAMoB,EAAEpB,KAAMsB,IAAKF,EAAE5B,GAAIA,GAAI4B,EAAE5B,OACrF+B,EAAmBP,EAAM/B,SAASkC,IAAK,SAAAK,GAAC,OAAI/B,EAAAC,EAAAC,cAAC8B,EAAD,CAASvC,QAASsC,EAAEtC,QAASoC,IAAKE,EAAEhC,OAC/DwB,EAAMU,eAK3B,OAAIpC,EAAMqC,OAKNlC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEhB,SACdY,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEf,cACZoC,GAENzB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,UACZsC,EACF9B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACS,EAAD,CAAqBG,SAfjB,SAACqB,GACjBtC,EAAMuC,YAAYD,EAAOF,sBAGlBjC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAU/B,GAAI,4DChBzBgC,EAA6B,SAACf,GAAD,MAAY,CACzCW,OAAQX,EAAMgB,KAAKL,gBCgBRM,sBACXC,YAdkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAGF,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACH,GACVS,EAASC,YAAmBV,QDTR,SAACW,GAAc,IACrCC,EADqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAhB,IAAA,SAAA2B,MAAA,WAGnC,OAAIP,KAAKpD,MAAMqC,OACJlC,EAAAC,EAAAC,cAAC0C,EAAcK,KAAKpD,OADDG,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAU/B,GAAI,eAHTuC,EAAA,CACXY,IAAMb,WAStC,OADqCH,YAAQH,EAARG,CAAoCI,ICK9DL,CAGblB","file":"static/js/1.70a624ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__xlFWw\",\"dialogsItems\":\"Dialogs_dialogsItems__gyFxl\",\"dialog\":\"Dialogs_dialog__3nQWC\",\"active\":\"Dialogs_active__1iDfD\",\"messages\":\"Dialogs_messages__3ldjd\",\"message\":\"Dialogs_message__13-X1\",\"dialogsInput\":\"Dialogs_dialogsInput__3RB_F\",\"btn\":\"Dialogs_btn__2Htah\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea,Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst maxLengthCreator50 = maxLengthCreator(50)\r\nexport const AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div className={s.dialogsInput}>\r\n                <Field component={Input} name={\"newMessageBody\"}\r\n                       validate={[required,maxLengthCreator50]} placeholder='Enter your message'/>\r\n                <button className={s.btn}>Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {AddMessageFormRedux} from \"./Message/AddMessageForm\"\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    if(!props.isAuth ){\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                { messagesElements }\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth){return <Redirect to={\"/login\"}/>}else{\r\n                return <Component {...this.props}/>}\r\n\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n\r\n    }\r\n}\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\nwithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}